import com.badlogic.gdx.tools.texturepacker.TexturePacker

buildscript {
    ext.kotlinVersion = '1.3.41'
    ext.gdxVersion = '1.9.11'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:4.0.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    }
}

allprojects {
    apply plugin: "eclipse"

    version = '1.0'
    ext {
        appName = "Spank Fury"
        gdxVersion = '1.9.11'
        roboVMVersion = '2.3.10-SNAPSHOT'
        box2DLightsVersion = '1.4'
        ashleyVersion = '1.7.0'
        aiVersion = '1.8.0'

        // Google Play Services minimum requirements is 14
        android_min_sdk_version = 15
    }

    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        google()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    }
}

project(":desktop") {
    apply plugin: "kotlin"


    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-controllers-desktop:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-controllers-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
        api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
        api "de.golfgl.gdxgamesvcs:gdx-gamesvcs-core-gamejolt:1.0.2"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":android") {
    apply plugin: "android"
    apply plugin: "kotlin-android"

    configurations { natives }

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
        api "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-controllers-android:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
        natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"
        api "de.golfgl.gdxgamesvcs:gdx-gamesvcs-android-gpgs:1.0.2"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
}

project(":core") {
    apply plugin: "kotlin"


    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-controllers:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
        api "net.dermetfan.libgdx-utils:libgdx-utils:0.13.4"
        api "de.golfgl.gdxgamesvcs:gdx-gamesvcs-core:1.0.2"
        api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    }
    task packTextures {
        def inputDir = "$rootDir/android/assets/images/included"
        def outputDir = "$rootDir/android/assets/images/included/packed"
        inputs.dir inputDir
        outputs.dir outputDir
        doLast {
            delete(outputDir)
            TexturePacker.process(inputDir, outputDir, "spankFury.pack")
        }
    }

    project.tasks.compileJava.dependsOn packTextures
}
